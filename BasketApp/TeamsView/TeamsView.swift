//
//  TeamsView.swift
//  BasketApp
//
//  Created by Daniil on 27.01.2021.
//
import RealmSwift
import UIKit

class TeamsView: UIViewController
{
    override func viewWillAppear(_ animated: Bool)
    {
        tableView.reloadData()
    }
    //–ü—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏ –¥–µ–ª–µ–≥–∞—Ç–∞ tableView –æ—Ç TeamsView
    override func viewDidLoad()
    {
        super.viewDidLoad()
        tableView.dataSource = self
        tableView.delegate = self
    }
    let idCell = "cell"
    //    // MARK: –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é
    //    @IBAction func goToMenu(_ sender: Any)
    //    {
    //        goToView(VC: self, newVC: "Menu")
    //    }
    // MARK: –î–æ–±–∞–≤–∏—Ç—å –∫–æ–º–∞–Ω–¥—É
    @IBAction func goToAddView(_ sender: Any)
    {
        //        let SB = UIStoryboard(name: "Main", bundle: nil)
        //        let VC = SB.instantiateViewController(withIdentifier: "addView") as UIViewController
        //        self.present(VC, animated: true, completion: nil)
        let newVC = storyboard?.instantiateViewController(identifier: "addView")
        self.navigationController?.pushViewController(newVC!, animated: true)
    }
    // MARK: –í—ã–≤–æ–¥ –Ω–∞ –∫–æ–Ω—Å–æ–ª—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∫–æ–º–∞–Ω–¥ –≤ –ë–î
    @IBAction func seeNum(_ sender: Any) {
        for item in dataBase[0].myStruct!.players
        {
            if item.numeric == ""
            {
                print("–ù–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä")
            }
            else
            {
                print(item.numeric)
            }
        }
    }
    // MARK: –£–¥–∞–ª–∏—Ç—å –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã
    @IBAction func deleteTeams(_ sender: Any)
    {
        //–ü—Ä–µ–¥—É–ø—Ä–µ–¥–∏—Ç—å –æ–± —É–¥–∞–ª–µ–Ω–∏–∏
        let alert = UIAlertController(title: "–í–Ω–∏–º–∞–Ω–∏–µ", message: "–í—Å–µ –∫–æ–º–∞–Ω–¥—ã –±—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã. ", preferredStyle: .alert)
        //–°–æ–∑–¥–∞—Ç—å –∫–Ω–æ–ø–∫—É —Å–æ–≥–ª–∞—Å–∏—è –∏ —É–¥–∞–ª–∏—Ç—å –∫–æ–º–∞–Ω–¥—ã –∏–∑ –±–¥
        let ok = UIAlertAction(title: "–î–∞", style: .destructive)
        {
            (action) in
            //–£–¥–∞–ª–∏—Ç—å –∫–æ–º–∞–Ω–¥—ã –∏–∑ –ë–î
            try! realm.write
            {
                realm.delete(dataBase)
            }
            // –£–¥–∞–ª–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—É—é –∫–æ–º–∞–Ω–¥—É
            try! myTeamWrite.write
            {
                myTeamRead[0].myTeam = nil
            }
            // –£–¥–∞–ª–∏—Ç—å –∫–æ–º–∞–Ω–¥—É –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞
            try! enemysTeamWrite.write
            {
                enemysTeamRead[0].myTeam = nil
            }
            print("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–∞–Ω–¥:",dataBase.count)
            print("–ú–æ—è –∫–æ–º–∞–Ω–¥–∞:", myTeamRead.count)
            print("–ö–æ–º–∞–Ω–¥–∞ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞:", enemysTeamRead.count, "\n")
            self.tableView.reloadData()
        }
        
        //–°–æ–∑–¥–∞—Ç—å –∫–Ω–æ–ø–∫—É –æ—Ç–∫–∞–∑–∞
        let no = UIAlertAction(title: "–ù–µ—Ç", style: .default, handler: nil)
        //–î–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫–∏ –≤ Alert
        alert.addAction(ok)
        alert.addAction(no)
        present(alert, animated: true, completion: nil)
    }
    // MARK: –í—ã–≤–µ—Å—Ç–∏ –∫–æ–º–∞–Ω–¥—ã
    @IBAction func seeItems(_ sender: Any)
    {
        print("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–∞–Ω–¥:",dataBase.count)
        for item in dataBase
        {
            print("\(dataBase.index(of: item)! + 1))",item.myStruct!.name)
            
        }
        print("–ú–æ—è –∫–æ–º–∞–Ω–¥–∞:", myTeamRead.count)
        print("–ö–æ–º–∞–Ω–¥–∞ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞:", enemysTeamRead.count, "\n")
    }
    // MARK: –ü—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ tableView
    @IBOutlet var tableView: UITableView!
    /*
     –û–±–Ω–æ–≤–∏—Ç—å tableView –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã
     */
}

extension TeamsView: UITableViewDelegate, UITableViewDataSource
{
    //MARK: –ó–∞–¥–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–µ–∫—Ü–∏–π
    /*
     
     1 - –≤—ã–±—Ä–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞
     2 - –∫–æ–º–∞–Ω–¥–∞ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞
     3- –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã
     */
    func numberOfSections(in tableView: UITableView) -> Int
    {
        3
    }
    // MARK: –ó–∞–¥–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —è—á–µ–µ–∫ –≤ —Å–µ–∫—Ü–∏—è—Ö
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int
    {
        if (section == 0 || section == 1)
        {
            return 1
        }
        else
        {
            if dataBase.count == 0
            {
                return 1
            }
            else {
                return dataBase.count
            }
        }
        
    }
    // MARK: –ó–∞–¥–∞—Ç—å –≤—ã—Å–æ—Ç—É –∑–∞–≥–æ–ª–æ–≤–∫–∞
    func tableView(_ tableView: UITableView, heightForHeaderInSection section: Int) -> CGFloat
    {
        30
    }
    // MARK: –°–æ–∑–¥–∞—Ç—å —è—á–µ–π–∫—É
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell
    {
        var cell = tableView.dequeueReusableCell(withIdentifier: idCell)
        if cell == nil
        {
            cell = UITableViewCell(style: .default, reuseIdentifier: idCell)
        }
        //–ù–∞—Å—Ç—Ä–æ–∏—Ç—å title –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã
        if indexPath.section == 0
        {
            if myTeamRead.count == 0
            {
                cell?.textLabel?.text = ""
            }
            else
            {
                cell?.textLabel?.text = myTeamRead[0].myTeam?.name
            }
        }
        //–ù–∞—Å—Ç—Ä–æ–∏—Ç—å title –¥–ª—è –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞
        if indexPath.section == 1
        {
            if enemysTeamRead.count == 0
            {
                cell?.textLabel?.text = ""
            }
            else
            {
                cell?.textLabel?.text = enemysTeamRead[0].myTeam?.name
            }
        }
        //–ù–∞—Å—Ç—Ä–æ–∏—Ç—å title –¥–ª—è –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥
        if indexPath.section == 2
        {
            if dataBase.count != 0
            {
                cell?.textLabel?.text = dataBase[dataBase.count - 1 - indexPath.row].myStruct?.name
            }
            else
            {
                cell?.textLabel?.text = ""
            }
        }
        return cell!
    }
    // MARK: –ó–∞–¥–∞—Ç—å –∑–∞–≥–æ–ª–æ–≤–∫
    func tableView(_ tableView: UITableView, titleForHeaderInSection section: Int) -> String?
    {
        if section == 0
        {
            return "My team"
        }
        else if section == 1
        {
            return "Enemy's team"
        }
        else
        {
            return "All teams"
        }
    }
    // MARK: –°–≤–∞–π–ø—ã –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–æ–º–∞–Ω–¥
    func tableView(_ tableView: UITableView, trailingSwipeActionsConfigurationForRowAt indexPath: IndexPath) -> UISwipeActionsConfiguration?
    {
        //–æ—Ç—Å—á–µ—Ç —Å–µ–∫—Ü–∏–π —Å –Ω—É–ª—è üòÉ
        if indexPath.section == 2 && dataBase.count != 0
        {
            let swipeAddMyTeam = UIContextualAction(style: .normal, title: "–ú–æ—è –∫–æ–º–∞–Ω–¥–∞") {
                action, view, success in
                // –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–µ–∂—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –µ—Å–ª–∏ –∫–æ–º–∞–Ω–¥–∞ –≤—ã–±—Ä–∞–Ω–∞ –∫–∞–∫ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫
                if dataBase[dataBase.count - 1 - indexPath.row].myStruct?.name == enemysTeamRead[0].myTeam?.name
                {
                    let alert = UIAlertController(title: "–í–Ω–∏–º–∞–Ω–∏–µ", message:"–î–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ —É–∂–µ –≤—ã–±—Ä–∞–Ω–∞ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞" , preferredStyle: .alert)
                    let ok = UIAlertAction(title: "–•–æ—Ä–æ—à–æ", style: .default, handler: nil)
                    alert.addAction(ok)
                    self.present(alert, animated: true, completion: nil)
                }
                // –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–µ–∂—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –µ—Å–ª–∏ –∫–æ–º–∞–Ω–¥–∞ –≤—ã–±—Ä–∞–Ω–∞ –∫–∞–∫ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–∞—è
                else if dataBase[dataBase.count - 1 - indexPath.row].myStruct?.name  == myTeamRead[0].myTeam?.name
                {
                    let alert = UIAlertController(title: "–í–Ω–∏–º–∞–Ω–∏–µ", message: "–î–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ —É–∂–µ –≤–∞–º–∏ –≤—ã–±—Ä–∞–Ω–∞", preferredStyle: .alert)
                    let ok = UIAlertAction(title: "–•–æ—Ä–æ—à–æ", style: .default, handler: nil)
                    alert.addAction(ok)
                    self.present(alert, animated: true, completion: nil)
                }
                //–ó–∞–ø–∏—Å–∞—Ç—å –∫–æ–º–∞–Ω–¥—É –∫–∞–∫ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—É—é
                else
                {
                    try! myTeamWrite.write
                    {
                        myTeamRead[0].myTeam = dataBase[dataBase.count - 1 - indexPath.row].myStruct
                    }
                    tableView.reloadData()
                }
            }
            swipeAddMyTeam.backgroundColor = #colorLiteral(red: 0.3411764801, green: 0.6235294342, blue: 0.1686274558, alpha: 1)
            
            let swipeAddEnemysTeam = UIContextualAction(style: .normal, title: "–ö–æ–º–∞–Ω–¥–∞ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞")
            {
                (acrion, view, success) in print("–ö–æ–º–∞–Ω–¥–∞ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞")
                // –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–µ–∂—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –µ—Å–ª–∏ –∫–æ–º–∞–Ω–¥–∞ –≤—ã–±—Ä–∞–Ω–∞, –∫–∞–∫ —Å–æ–±—Å–≤–µ–Ω–Ω–∞—è
                if dataBase[dataBase.count - 1 - indexPath.row].myStruct?.name == myTeamRead[0].myTeam?.name
                {
                    let alert = UIAlertController(title: "–í–Ω–∏–º–∞–Ω–∏–µ", message: "–î–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ —É–∂–µ –≤–∞–º–∏ –≤—ã–±—Ä–∞–Ω–∞", preferredStyle: .alert)
                    let ok = UIAlertAction(title: "–•–æ—Ä–æ—à–æ", style: .default, handler: nil)
                    alert.addAction(ok)
                    self.present(alert, animated: true, completion: nil)
                }
                // –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–µ–∂—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –µ—Å–ª–∏ –∫–æ–º–∞–Ω–¥–∞ –≤—ã–±—Ä–∞–Ω–∞, –∫–∞–∫ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫
                else if dataBase[dataBase.count - 1 - indexPath.row].myStruct?.name  == enemysTeamRead[0].myTeam?.name
                {
                    let alert = UIAlertController(title: "–í–Ω–∏–º–∞–Ω–∏–µ", message: "–î–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ —É–∂–µ –≤—ã–±—Ä–∞–Ω–∞ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞", preferredStyle: .alert)
                    let ok = UIAlertAction(title: "–•–æ—Ä–æ—à–æ", style: .default, handler: nil)
                    alert.addAction(ok)
                    self.present(alert, animated: true, completion: nil)
                }
                //–ó–∞–ø–∏—Å–∞—Ç—å –∫–æ–º–∞–Ω–¥—É
                else
                {
                    try! enemysTeamWrite.write
                    {
                        enemysTeamRead[0].myTeam = dataBase[dataBase.count - 1 - indexPath.row].myStruct
                    }
                    tableView.reloadData()
                }
            }
            swipeAddEnemysTeam.backgroundColor = #colorLiteral(red: 0.9254902005, green: 0.2352941185, blue: 0.1019607857, alpha: 1)
            //–î–æ–±–∞–≤–∏—Ç—å —Å–≤–∞–π–ø—ã
            let swipe = UISwipeActionsConfiguration (actions: [swipeAddMyTeam,swipeAddEnemysTeam])
            //–û—Ç–∫–ª—é—á–∏—Ç—å –¥–ª–∏–Ω–Ω—ã–π —Å–≤–∞–π–ø
            swipe.performsFirstActionWithFullSwipe = false
            return swipe
        }
        else
        {
            return nil
        }
    }
    // MARK: –ü–µ—Ä–µ—Ö–æ–¥ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath)
    {
        
        //        let VC = UIStoryboard(name: "Main", bundle: nil)
        //        let nextVC = VC.instantiateViewController(identifier: "seePlayerView")
        //        self.present(nextVC, animated: true, completion: nil)
        if (dataBase.count > 0)
        {
            let newVC = self.storyboard?.instantiateViewController(identifier: "seePlayerView") as! seePlayerView
            self.navigationController?.pushViewController(newVC, animated: true)
            newVC.itemInDataBase = dataBase.count - 1 - indexPath.row
            tableView.cellForRow(at: indexPath)?.isSelected = false
        }
    }
    // MARK: –°–≤–∞–π–ø—ã –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥
    func tableView(_ tableView: UITableView, leadingSwipeActionsConfigurationForRowAt indexPath: IndexPath) -> UISwipeActionsConfiguration?
    {
        //–î–æ–±–∞–≤–∏—Ç—å —Å–≤–∞–π–ø –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã
        if indexPath.section == 0 && myTeamRead.count != 0
        {
            let swipeDelete = UIContextualAction(style: .destructive, title: "–£–¥–∞–ª–∏—Ç—å")
            {
                (action, view, success) in
                try! myTeamWrite.write
                {
                    myTeamRead[0].myTeam = nil
                }
                tableView.reloadData()
            }
            let swipe = UISwipeActionsConfiguration(actions: [swipeDelete])
            //–û—Ç–∫–ª—é—á–∏—Ç—å –¥–ª–∏–Ω–Ω—ã–π —Å–≤–∞–π–ø
            swipe.performsFirstActionWithFullSwipe = false
            return swipe
        }
        //–î–æ–±–∞–≤–∏—Ç—å —Å–≤–∞–π–ø –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞
        if indexPath.section == 1 && dataBase.count != 0
        {
            let swipeDelete = UIContextualAction(style: .destructive, title: "–£–¥–∞–ª–∏—Ç—å")
            {
                (action, view, success) in
                try! enemysTeamWrite.write
                {
                    enemysTeamRead[0].myTeam = nil
                }
                tableView.reloadData()
            }
            let swipe = UISwipeActionsConfiguration(actions: [swipeDelete])
            //–û—Ç–∫–ª—é—á–∏—Ç—å –¥–ª–∏–Ω–Ω—ã–π —Å–≤–∞–π–ø
            swipe.performsFirstActionWithFullSwipe = false
            return swipe
        }
        //–î–æ–±–∞–≤–∏—Ç—å —Å–≤–∞–π–ø –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã –∏–∑ –ë–î
        if indexPath.section == 2 && dataBase.count != 0
        {
            let id = dataBase.count - indexPath.row - 1
            let swipeDeleteTeam = UIContextualAction(style: .destructive, title: "–£–¥–∞–ª–∏—Ç—å")
            {
                (action, view, success) in
                //–°–æ–∑–¥–∞—Ç—å Alert
                let agree = UIAlertController(title: "–í–Ω–∏–º–∞–Ω–∏–µ", message:"–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –∫–æ–º–∞–Ω–¥—É?" , preferredStyle: .alert)
                // –°–æ–∑–¥–∞—Ç—å –∫–Ω–æ–ø–∫—É –¥–ª—è Alert
                let ok = UIAlertAction(title: "–î–∞", style: .destructive)
                {
                   
                    (action) in
                    
                    try! myTeamWrite.write{
                        //–£–¥–∞–ª–∏—Ç—å –∫–æ–º–∞–Ω–¥—É, –µ—Å–ª–∏ –æ–Ω–∞ –≤—ã–±—Ä–∞–Ω–∞ –≤ –∫–∞—á–µ—Å—Ç–≤–µ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–π
                        if dataBase[id].myStruct?.name == myTeamRead[0].myTeam?.name
                        {
                            myTeamRead[0].myTeam = nil
                        }
                        //–£–¥–∞–ª–∏—Ç—å –∫–æ–º–∞–Ω–¥—É, –µ—Å–ª–∏ –æ–Ω–∞ –≤—ã–±—Ä–∞–Ω–∞ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞
                        if dataBase[id].myStruct?.name == enemysTeamRead[0].myTeam?.name
                        {
                            enemysTeamRead[0].myTeam = nil
                        }
                    }
                    //–£–¥–∞–ª–∏—Ç—å –∫–æ–º–∞–Ω–¥—É
                    try! realm.write
                    {
                        realm.delete(dataBase[id])
                    }
                    //–û–±–Ω–æ–≤–∏—Ç—å tableView
                    self.tableView.reloadData()
                }
                // –°–æ–∑–¥–∞—Ç—å –∫–Ω–æ–ø–∫—É –¥–ª—è Alert
                let no = UIAlertAction(title: "–ù–µ—Ç", style: .default, handler: nil)
                //–î–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫–∏ –≤ Alert
                agree.addAction(ok)
                agree.addAction(no)
                self.present(agree, animated: true, completion: nil)
            }
            let swipe = UISwipeActionsConfiguration(actions: [swipeDeleteTeam])
            //–û—Ç–∫–ª—é—á–∏—Ç—å –¥–ª–∏–Ω–Ω—ã–µ —Å–≤–∞–π–ø—ã
            swipe.performsFirstActionWithFullSwipe = false
            return swipe
        }
        
        else
        {
            return nil
        }
    }
}
