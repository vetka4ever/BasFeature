//
//  addView.swift
//  BasketApp
//
//  Created by Daniil on 02.02.2021.
//

import UIKit
import RealmSwift


class addView: UIViewController
{
    var addViewPlayers = [UITextField(),UITextField(),UITextField(),UITextField(),UITextField(),UITextField(),UITextField(),UITextField(),UITextField(),UITextField(),UITextField(),UITextField(),UITextField(),]
    var nameTeamsCellid = "TeamsCell"
    var namePlayerCellid = "PlayerCell"
    var addButtonCellid = "ButtonCell"
    override func viewDidLoad()
    {
        super.viewDidLoad()
       
        //–ü—Ä–∏—Å–≤–æ–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏ –¥–µ–ª–µ–≥–∞—Ç tableView –æ—Ç TeamsView
        tableView.dataSource = self
        tableView.delegate = self
        //–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å —è—á–µ–π–∫–∏
        tableView.register(UINib(nibName: "nameTeamsCell", bundle: nil), forCellReuseIdentifier: nameTeamsCellid)
        tableView.register(UINib(nibName: "namePlayerCell", bundle: nil), forCellReuseIdentifier: namePlayerCellid)
    }
    override func viewWillAppear(_ animated: Bool)
    {
        // –î–æ–±–∞–≤–∏—Ç—å –Ω–∞–±–ª—é–¥–∞—Ç–µ–ª–µ–π –¥–ª—è –ø–æ—è–≤–ª–µ–Ω–∏—è –∏ –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
        super.viewWillAppear(animated)
        registerKeyboardNotifications()
    }
    override func viewWillDisappear(_ animated: Bool) {
        super.viewWillDisappear(animated)
        removeKeyboardNotifications()
    }
    @IBOutlet var tableView: UITableView!
    func registerKeyboardNotifications()
    {
        //–î–æ–±–∞–≤–∏—Ç—å –Ω–∞–±–ª—é–¥–∞—Ç–µ–ª–µ–π –ø–µ—Ä–µ–¥ –ø–æ—è–≤–ª–µ–Ω–∏–µ–º –∏ –∏—Å—á–µ–∑–∞–Ω–∏–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
        NotificationCenter.default.addObserver(forName: UIResponder.keyboardWillShowNotification, object: nil, queue: nil, using: kbWillShow(_:))
        NotificationCenter.default.addObserver(forName: UIResponder.keyboardWillHideNotification, object: nil, queue: nil, using: kbWillHide(_:))
    }
    
    func removeKeyboardNotifications()
    {
        //–£–¥–∞–ª–∏—Ç—å –Ω–∞–±–ª—é–¥–∞—Ç–µ–ª–µ–π –ø–µ—Ä–µ–¥ –ø–æ—è–≤–ª–µ–Ω–∏–µ–º –∏ –∏—Å—á–µ–∑–∞–Ω–∏–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
        NotificationCenter.default.removeObserver(self, name: UIResponder.keyboardWillShowNotification, object: nil)
        NotificationCenter.default.removeObserver(self, name: UIResponder.keyboardWillHideNotification, object: nil)
    }
    @objc func kbWillShow(_ notification: Notification)
    {
        // –í—ã—Å—á–∏—Ç–∞—Ç—å –≤—ã—Å–æ—Ç—É –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
        let userInfo = notification.userInfo
        let kbSize = (userInfo?[UIResponder.keyboardFrameEndUserInfoKey] as! NSValue).cgRectValue
        //–°–¥–≤–∏–Ω—É—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç
        tableView.contentInset = UIEdgeInsets(top: 0, left: 0, bottom: kbSize.height, right: 0)
        
    }
    @objc func kbWillHide(_ notification: Notification)
    {
        //–í–µ—Ä–Ω—É—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤ –∏—Å—Ö–æ–¥–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ
        tableView.contentInset = UIEdgeInsets.zero
    }
}

extension addView : UITableViewDelegate, UITableViewDataSource
{
    /*
     –î–æ–±–∞–≤–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–µ–∫—Ü–∏–π
     0 - —Å–µ–∫—Ü–∏—è –¥–ª—è –≤–≤–µ–¥–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã
     1 - —Å–µ–∫—Ü–∏—è –¥–ª—è –≤–≤–µ–¥–µ–Ω–∏—è –∏–≥—Ä–æ–∫–æ–≤
     2 - —Å–µ–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã –≤ –ë–î
     */
    func numberOfSections(in tableView: UITableView) -> Int {
        3
    }
    /*
     –î–æ–±–∞–≤–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —è—á–µ–µ–∫
     0 –∏ 2 - –ø–æ –æ–¥–Ω–æ–π —è—á–µ–π–∫–µ –¥–ª—è –Ω–∞–∑–≤–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã –∏–ª–∏ –∫–Ω–æ–ø–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
     1 - 12 —è—á–µ–µ–∫ –¥–ª—è –∏–≥—Ä–æ–∫–æ–≤
     */
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int
    {
        if section == 0 || section == 2
        {
            return 1
        }
        else
        {
            return 12
        }
        
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell
    {
        //–°–æ–∑–¥–∞—Ç—å —è—á–µ–π–∫—É –¥–ª—è –≤–≤–µ–¥–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã
        if indexPath.section == 0
        {
            let cell = tableView.dequeueReusableCell(withIdentifier: nameTeamsCellid, for: indexPath) as! nameTeamsCell
            cell.selectionStyle = .none
            addViewPlayers[0] = cell.TextField
            cell.backgroundColor = .white
            return cell
        }
        //–°–æ–∑–¥–∞—Ç—å —è—á–µ–π–∫—É –¥–ª—è –≤–≤–µ–¥–µ–Ω–∏—è –Ω–æ–º–µ—Ä–æ–≤ –∏–≥—Ä–æ–∫–æ–≤
        else if indexPath.section == 1
        {
            let cell = tableView.dequeueReusableCell(withIdentifier: namePlayerCellid, for: indexPath) as! namePlayerCell
            cell.selectionStyle = .none
            cell.namePlayer.text = "–ò–≥—Ä–æ–∫ ‚Ññ "
            if (addViewPlayers.count <= 13)
            {
                addViewPlayers[indexPath.row+1] = cell.textField
            }
            return cell
        }
        //–°–æ–∑–¥–∞—Ç—å —è—á–µ–π–∫—É —Å –∫–Ω–æ–ø–∫–æ–π –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã
        else
        {
            let cell = UITableViewCell(style: .default, reuseIdentifier: addButtonCellid)
            cell.textLabel?.text = "–î–æ–±–∞–≤–∏—Ç—å –∫–æ–º–∞–Ω–¥—É"
            cell.textLabel?.textAlignment = .center
            cell.backgroundColor = .green
            return cell
        }
        
    }
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath)
    {
    
        if indexPath.section == 2
        {
            // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–∞–±—ã–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —á—Ç–æ-—Ç–æ –≤–≤–µ—Å—Ç–∏
            var flag = false
            for item in addViewPlayers
            {
                if item.text?.isEmpty == true
                {
                    flag = true
                }
            }
            if flag
            {
                //–ü—Ä–µ–¥—É–ø—Ä–µ–¥–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                let attention = UIAlertController(title: "–•–º–º...üßê", message: "–ü–æ—Ö–æ–∂–µ –≤—ã —á—Ç–æ-—Ç–æ –∑–∞–±—ã–ª–∏ —É–∫–∞–∑–∞—Ç—åü•∫", preferredStyle: .alert)
                let ok = UIAlertAction(title: "–•–æ—Ä–æ—à–æ", style: .default, handler: nil)
                attention.addAction(ok)
                present(attention, animated: true, completion: nil)
            }
            else
            {
                // –ó–∞–ø–∏—Å–∞—Ç—å –∫–æ–º–∞–Ω–¥—É –≤ –ë–î
                try! realm.write{
                    let obj = MyRealObject()
                    let comand = createComand(array: addViewPlayers)
                    obj.myStruct = comand
                    realm.add(obj)
                }
                // –£–≤–µ–¥–æ–º–∏—Ç—å –æ –∑–∞–ø–∏—Å–∏ –∫–æ–º–∞–Ω–¥—ã –≤ –ë–î
                let attention = UIAlertController(title: "–£—Ä–∞ ü•≥", message: "–ö–æ–º–∞–Ω–¥–∞ –¥–æ–±–∞–≤–ª–ª–µ–Ω–∞", preferredStyle: .alert)
                let ok = UIAlertAction(title: "–•–æ—Ä–æ—à–æ", style: .default) {
                    (action) in
                    
                    self.navigationController?.popViewController(animated: true) 
                    
                    
                }
                attention.addAction(ok)
                present(attention, animated: true, completion: nil)
                
            }
        }
        else
        {
            tableView.endEditing(true)
            
        }
    }
    //–ó–∞–¥–∞—Ç—å –≤—ã—Å–æ—Ç—É —è—á–µ–µ–∫
    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
        return 50
        
    }
    // –ó–∞–¥–∞—Ç—å –∑–∞–≥–æ–ª–æ–≤–∫–∏
    func tableView(_ tableView: UITableView, titleForHeaderInSection section: Int) -> String? {
        if section == 0
        {
            return "–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã"
        }
        else if section == 1
        {
            return "–ù–æ–º–µ—Ä–∞ –∏–≥—Ä–æ–∫–æ–≤"
        }
        else
        {
            return ""
        }
    }
    // –†–∞–∑–º–µ—Å—Ç–∏—Ç—å –∑–∞–≥–æ–ª–æ–≤–∫–∏ –ø–æ —Ü–µ–Ω—Ç—Ä—É
    func tableView(_ tableView: UITableView, willDisplayHeaderView view: UIView, forSection section: Int) {
        if let headerView = view as? UITableViewHeaderFooterView {
            headerView.textLabel?.textAlignment = .center
        }
    }
}

